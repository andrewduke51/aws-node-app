version: 2.1
jobs:
  deploy-app:
    machine: true
    environment:
      - ANSIBLE_HOST_KEY_CHECKING: False
      - ANSIBLE_FORCE_COLOR: true
      - PACKER_BUILD: false
    resource_class: dukesofhazards/runner
    working_directory: ~
    steps:
      - add_ssh_keys:
          fingerprints:
            - "dc:3f:4f:29:01:f7:c4:ff:d3:79:f2:00:85:7b:4c:3a"
      - checkout
      - run:
          name: install pipeline dependencies
          command: |
            echo "export PATH=$PATH:$PWD/ops" >> ${BASH_ENV}
            chmod +x ops/*.sh
            ops/install_dependencies.sh
      - run:
          name: Create immutable EC2 image for node app with Hashicorp packer
          command: |
            if [ $PACKER_BUILD == "true" ]; then
              cd build-ec2
              ../ops/packer init .
              ../ops/packer build aws-ubuntu.pkr.hcl
            fi
      - run:
          name: Terraform Provision AWS Infrastructure
          command: |
            AUTO_DEPLOY="-auto-approve"
            cd terraform && terraform init
            if [ $CIRCLE_BRANCH = 'dev' ]; then
              terraform plan -out tfapply -var-file dev.tfvars
              terraform apply -var-file=dev.tfvars $AUTO_DEPLOY
            elif [ $CIRCLE_BRANCH = 'qa' ]; then
              terraform plan -out tfapply -var-file qa.tfvars
              terraform apply -var-file=qa.tfvars $AUTO_DEPLOY
            elif [ $CIRCLE_BRANCH = 'prod' ]; then
              terraform plan -out tfapply -var-file prod.tfvars
              terraform apply -var-file=prod.tfvars $AUTO_DEPLOY
            fi
      - run:
          name: build weather app container and test code
          command: |
            cd build_docker
            echo "${DOCKERHUB_PASS}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin
            docker build -t andrewduke51/nodeapp .
            docker run andrewduke51/nodeapp npm run test
      - run:
          name: Docker tag and push the image to the repository
          command: |
            docker tag andrewduke51/nodeapp andrewduke51/nodeapp:latest
            docker push andrewduke51/nodeapp:latest

############ Deployment assume weather-appdev.ddns.net | weather-appqa.ddns.net | weather-appprod.ddns.net ############
      - run:
          name: Deploy latest weather app with docker-compose.yml
          command: |
            cd docker-compose
            docker context create $CIRCLE_BRANCH --docker "host=ssh://ubuntu@weather-app$CIRCLE_BRANCH.ddns.net" || echo "exit status non-zero"
            docker context use $CIRCLE_BRANCH
            docker-compose pull
            docker-compose up -d

workflows:
  version: 2
  deploy-app:
    jobs:
      - deploy-app:
          filters:
            branches:
              only:
                - dev
                - qa
                - prod